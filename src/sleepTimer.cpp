#include <avr/io.h>
#include <util/delay.h>
#include "sleepTimer.h"

void initSleepTimer()
{
    // atmega8a просыпается по таймеру2 только если он работает в асинхронном
    // режиме с тактированием от отдельного часового кварца
    // Частота тактирования от часового кварца 32,768 кГц (32768 Гц)
    // Подключается кварц так же как и обычный, при этом МК должен быть настроен
    // на внутреннее тактирование
    // При этом при частоте <400 кГц конденсаторы на землю ставить не надо
    // Установкой CKOPT Fuse можно подключить внутренние конденсаторы на 36pF

    //1. Отключите прерывания таймера/счетчика 2, очистив OCIE2 и TOIE2.
    TIMSK &= ~(1 << (OCIE2)); // откл. прерывание совпадения
    TIMSK &= ~(1 << (TOIE2)); // откл. прерывание переполнения
    //2. Выберите источник синхронизации, установив соответствующий параметр AS2.
    ASSR |= (1 << (AS2)); // вкл. асинхронный режим
    _delay_ms(2000);      // ожидание стабилизации частоты
    //3. Запишите новые значения в TCNT2, OCR2 и TCCR2.
    TCNT2 = (0); // регистр счетчика
    OCR2 = (255);
    // Частота кварца 32768 Гц
    // Частота счетчика 32678/предделитель
    // Длительность 1 тика = предделитель/32768 (сек)
    // Длительность 256 тиков = 256*предделитель/32768 = предделитель/128 (сек)

    // Установка предделителя 1024
    // CS 22-21-20 1-1-1
    // Итого 1/32768*1024 = 0,03125 сек - длительность счетчика
    // 8 сек можно посчитать на 256 тиков

    // Предделитель 256
    // CS 22-21-20 1-1-0
    // 1 тик = 256/32768 = 0,0078125 секунд
    // 256 тиков = 2 сек.

    // Предделитель 128
    // CS 22-21-20 1-0-1
    // 1 тик = 128/32768 = 0,00390625 секунд
    // 256 тиков = 1 сек.

    //TCCR2 |= (1<<(CS20))|(1<<(CS21))|(1<<(CS22)); // предделитель 1024
    TCCR2 |= (1 << (CS21)) | (1 << (CS22)); // предделитель 256
    //TCCR2 |= (1<<(CS20))|(1<<(CS22)); // предделитель 128

    //4. Чтобы переключиться на асинхронную работу: дождитесь TCN2UB, OCR2UB и TCR2UB.
    while ((ASSR & (1 << (TCN2UB))) | (ASSR & (1 << (OCR2UB))) | (ASSR & (1 << (TCR2UB))))
        ;

    //5. Снимите флаги прерывания Timer/Counter2.
    TIFR &= ~(1 << (OCF2)); // сброс флаг сравнения
    TIFR &= ~(1 << (TOV2)); // сброс флаг переполнения
    //6. Разрешить прерывания, если это необходимо.
    SREG |= (1 << (SREG_I)); // глобально разрешить прерывания
    //TIMSK |= (1<<(OCIE2)); // вкл. прерывание совпадения
    TIMSK |= (1 << (TOIE2)); // вкл. прерывание переполнения
}